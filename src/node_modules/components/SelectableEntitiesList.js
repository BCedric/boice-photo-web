import React from 'react'
import { List, ListItem, CircularProgress, Icon, ListItemSecondaryAction, withStyles } from '@material-ui/core'

import './SelectableEntitiesList.css'

const styles = theme => {
    console.log('theme', theme);

    return {
        actionIcon: {
            cursor: 'pointer',
            transition: 'color 0.5s',
            '&:hover': {
                transition: 'color 0.2s',
                color: theme.palette.primary.main
            }
        },
        warningIcon: {
            cursor: 'pointer',
            marginLeft: '0.5em',
            transition: 'color 0.5s',
            '&:hover': {
                transition: 'color 0.2s',
                color: theme.palette.error.main
            }
        }
    }
}

class SelectableEntitiesList extends React.Component {

    constructor(props) {
        super(props)
        this.state = { displayForm: false, editedEntity: null }
    }

    componentDidMount() {
        this.props.getEntities()
    }

    selectEntity(entity) {
        this.props.setCurrentEntity(entity)
    }

    displayForm = (editedEntity) => {
        this.setState({ displayForm: true, editedEntity })
    }

    deleteEntity = (entity) => {
        this.props.deleteEntity(entity)
    }

    closeForm = () => {
        this.setState({ displayForm: false, editedEntity: null })
    }

    render() {
        const { classes, entities, displayEntity, selectedEntity, componentToDisplay, entityForm } = this.props
        const { displayForm, editedEntity } = this.state
        return (
            <div className="list-container">
                <div className="entities-container">
                    <Icon className={`${classes.actionIcon} add-icon`} onClick={() => this.displayForm(null)}>add</Icon>
                    <div >
                        {entities == null &&
                            <div className="loader-container">
                                <CircularProgress color="primary" />
                            </div>
                        }
                        {entities != null &&
                            <List>
                                {entities.map((entity, index) => (
                                    <ListItem
                                        className="selectable-list-item"
                                        key={index}
                                        onClick={() => this.selectEntity(entity)}
                                        selected={selectedEntity != null && selectedEntity.id === entity.id}
                                    >
                                        {displayEntity(entity)}
                                        <ListItemSecondaryAction>
                                            <Icon className={classes.actionIcon} onClick={() => this.displayForm(entity)}>edit</Icon>
                                            <Icon className={classes.warningIcon} onClick={() => this.deleteEntity(entity)}>delete</Icon>
                                        </ListItemSecondaryAction>
                                    </ListItem>
                                ))}
                            </List>
                        }
                    </div>
                </div>
                <div className="entity-container">
                    {selectedEntity != null && !displayForm && componentToDisplay(selectedEntity)}
                    {displayForm && entityForm(this.closeForm, editedEntity)}
                </div>
            </div>
        )
    }
}

export default withStyles(styles)(SelectableEntitiesList)