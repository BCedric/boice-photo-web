import React from 'react'
import { Fade, Button, Icon } from '@material-ui/core'
import { withStyles } from '@material-ui/core/styles'
import {
    Link
} from 'react-router-dom'

import 'components/Slider/Slider.css'

const materialStyles = {
    button: {
        borderColor: '#FFFFFF',
        color: '#FFFFFF'
    },
    arrowIcons: {
        fontSize: '4em'
    }
}

const Slider = withStyles(materialStyles)(
    class extends React.Component {

        constructor(props) {
            super(props)
            this.state = { currentPictureIndex: 0, sliderWidth: 0, timeoutResult: null }
            this.slider = React.createRef()
        }

        componentDidMount() {
            console.log('slider ref', this.slider.current.offsetWidth);

            this.setState({ timeoutResult: this.triggerTimeout(), sliderWidth: this.slider.current.offsetWidth })
        }

        componentWillUnmount() {
            const { timeoutResult } = this.state
            if (timeoutResult != null) {
                clearTimeout(timeoutResult)
            }
        }

        triggerTimeout = () => setTimeout(() => {
            const { currentPictureIndex, timeoutResult } = this.state
            if (timeoutResult != null) {
                clearTimeout(timeoutResult)
            }
            const sliderWidth = this.slider.current != null
                ? this.slider.current.offsetWidth
                : null
            sliderWidth != null && this.setState({ sliderWidth })
            currentPictureIndex === this.props.pictures.length - 1
                ? this.setState({ currentPictureIndex: 0 })
                : this.setState({ currentPictureIndex: currentPictureIndex + 1 })
            this.setState({ timeoutResult: this.triggerTimeout() })
        }, 8000)

        onClickNext = () => {
            const { currentPictureIndex, sliderWidth } = this.state
            console.log(currentPictureIndex, this.props.pictures, sliderWidth);

            currentPictureIndex === this.props.pictures.length - 1
                ? this.setState({ currentPictureIndex: 0 })
                : this.setState({ currentPictureIndex: currentPictureIndex + 1 })
        }

        onClickPrevious = () => {
            const { currentPictureIndex } = this.state
            currentPictureIndex === 0
                ? this.setState({ currentPictureIndex: this.props.pictures.length - 1 })
                : this.setState({ currentPictureIndex: currentPictureIndex - 1 })
        }


        render() {
            const { sliderWidth, currentPictureIndex } = this.state
            return (
                <div className="slider" ref={this.slider}>
                    <div className="arrow-left arrow clickable" onClick={() => this.onClickPrevious()}>
                        <Icon className={this.props.classes.arrowIcons}>keyboard_arrow_left</Icon>
                    </div>
                    <div className="arrow-right arrow clickable" onClick={() => this.onClickNext()}>
                        <Icon className={this.props.classes.arrowIcons}>keyboard_arrow_right</Icon>
                    </div>
                    <div className="slider-wrapper" style={{
                        transform: `translateX(-${sliderWidth * currentPictureIndex}px)`,
                        transition: 'transform ease-out 0.8s'
                    }}>
                        {this.props.pictures.map((picture, index) => <Slide picture={picture} selected={index === currentPictureIndex} key={index} />)}
                    </div>
                </div>
            )

        }
    }
)

const Slide = withStyles(materialStyles)(
    function ({ picture, selected, classes }) {
        const styles = {
            backgroundImage: `url(${picture.src})`,
            backgroundSize: 'cover',
            backgroundRepeat: 'no-repeat',
            backgroundPosition: '50% 60%',
        }

        return (
            <div className="slide" style={styles}>
                <Fade in={selected} timeout={{ enter: 3000, exit: 1000 }}>
                    <div className="slide-infos">
                        <h1 className="slide-title">
                            {picture.name}
                        </h1>
                        <Link to={picture.link}>
                            <Button className={classes.button} variant="outlined">Voir la galerie</Button>
                        </Link>
                    </div>
                </Fade>
            </div>
        )
    }
)

export default Slider