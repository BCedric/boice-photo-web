import Http from 'utils/Http'

const types = {
  SET_MESSAGE: 'SET_MESSAGE',
  SAVE_ADRESS_SERVER: 'SAVE_ADRESS_SERVER',
  SET_GALLERIES: 'SET_GALLERIES',
  SET_CURRENT_GALLERY: 'SET_CURRENT_GALLERY',
  SET_GALLERIES_LISTS: 'SET_GALLERIES_LISTS',
  SET_CURRENT_GALLERIES_LIST: 'SET_CURRENT_GALLERIES_LIST'
}

const setMessage = message => {
  return {
    type: types.SET_MESSAGE,
    message
  }
}

const saveAdressServer = adress => {
  return {
    type: types.SAVE_ADRESS_SERVER,
    adress
  }
}

const setGalleries = galleries => {
  return {
    type: types.SET_GALLERIES,
    galleries
  }
}

const setCurrentGallery = gallery => {
  return {
    type: types.SET_CURRENT_GALLERY,
    gallery
  }
}

const setGalleriesLists = galleriesLists => {
  return {
    type: types.SET_GALLERIES_LISTS,
    galleriesLists
  }
}

const setCurrentGalleriesList = galleriesList => {
  return {
    type: types.SET_CURRENT_GALLERIES_LIST,
    galleriesList
  }
}

const getGalleries = () => {
  return function (dispatch) {
    return Http.get('/galleries')
      .then(data => {
        dispatch(setGalleries(data.galleries))
      })
  }
}

const deletePicture = pictureId => {
  return function (dispatch) {
    return Http.delete(`/picture/${pictureId}`)
      .then(data => dispatch(setCurrentGallery(data)))
  }
}

const addPicture = (galleryId, file) => {
  return function (dispatch) {
    const formData = new FormData()
    formData.append("file", file)
    formData.append("galleryId", galleryId)

    return Http.post(`/picture`, formData)
      .then(data => dispatch(setCurrentGallery(data)))
  }
}

const putGallery = (galleryId, body) =>
  Http.put(`/gallery/${galleryId}`, body)

const postGallery = (body) => {
  return function (dispatch) {
    const formData = new FormData()
    formData.append('name', body.name)
    formData.append('description', body.description)
    Array.from(body.files).forEach((file, index) => formData.append(index, file))
    return Http.post(`/gallery`, formData)
      .then(data => dispatch(setGalleries(data.galleries)))
  }
}

const deleteGallery = (galleryId) =>
  function (dispatch) {
    return Http.delete(`/gallery/${galleryId}`)
      .then(data => dispatch(setGalleries(data.galleries)))
  }

const getGalleriesLists = () =>
  function (dispatch) {
    Http.get('/gallerieslists')
      .then(galleriesLists => dispatch(setGalleriesLists(galleriesLists)))
  }

const postGalleriesList = (body) => {
  return function (dispatch) {
    const formData = new FormData()
    formData.append('name', body.name)
    formData.append('galleries', JSON.stringify(body.galleriesForms.map(galleryForm => galleryForm.name)))
    body.galleriesForms.forEach(galleryForm => {
      Array.from(galleryForm.files).forEach((galleryFiles, index) => formData.append(`${galleryForm.name}${index}`, galleryFiles))
    })
    return Http.post('/gallerieslist', formData)
      .then(galleriesLists => dispatch(setGalleriesLists(galleriesLists)))
  }
}

const putGalleriesList = (id, body) => {
  return function (dispatch) {
    return Http.put(`/gallerieslist/${id}`, body)
      .then(galleriesLists => dispatch(setGalleriesLists(galleriesLists)))
  }
}

const addGalleryToList = (id, body) => {
  return function (dispatch) {
    return Http.put(`/gallerieslist/addGallery/${id}`, body)
      .then(galleriesList => dispatch(setCurrentGalleriesList(galleriesList)))
  }
}

const removeGalleryToList = (id, body) => {
  return function (dispatch) {
    return Http.put(`/gallerieslist/removeGallery/${id}`, body)
      .then(galleriesList => dispatch(setCurrentGalleriesList(galleriesList)))
  }
}

const updateDB = () => {
  return function (dispatch) {
    Http.get('/updatedb')
      .then(
        response => response.json(),
        error => console.log('An error occured.', error)
      )
      .then(
        json => {
          dispatch(setMessage(json.update))
        }
      )
  }
}

export {
  types,
  updateDB,
  saveAdressServer,
  getGalleries,
  setCurrentGallery,
  deletePicture,
  addPicture,
  putGallery,
  postGallery,
  deleteGallery,
  addGalleryToList,
  removeGalleryToList,
  getGalleriesLists,
  postGalleriesList,
  putGalleriesList,
  setCurrentGalleriesList
}
