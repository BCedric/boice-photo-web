// import {actionCreator, createTypes} from 'redux-action-creator';
import utils from 'utils'
import config from 'config'

const types = {
  LOAD_IMAGES: 'LOAD_IMAGES',
  SET_GALLERY_ID: 'SET_GALLERY_ID',
  RAZ_IMGS: 'RAZ_IMGS',
  LOAD_MORE: 'LOAD_MORE',
  SET_CURRENT_IMAGE: 'SET_CURRENT_IMAGE',
  SET_LIGHTBOX_IS_OPEN: 'SET_LIGHTBOX_IS_OPEN',
  GO_TO_NEXT: 'GO_TO_NEXT',
  GO_TO_PREVIOUS: 'GO_TO_PREVIOUS',
  SET_IS_FETCHING: 'SET_IS_FETCHING',
  SET_GALLERY_NAME: 'SET_GALLERY_NAME',
  SET_GALLERY: 'SET_GALLERY'
}

function loadImages () {
  return {
    type: types.LOAD_IMAGES
  }
}

function loadMore() {
  return {
    type: types.LOAD_MORE,
  }
}

function razImgs() {
  return {
    type: types.RAZ_IMGS
  }
}

function setLightboxIsOpen (bool) {
  return {
    type: types.SET_LIGHTBOX_IS_OPEN,
    bool
  }
}

function setGallery(gallery) {
  return {
    type: types.SET_GALLERY,
    gallery
  }
}

function setIsFetching(bool) {
  return {
    type: types.SET_IS_FETCHING,
    bool
  }
}

function setCurrentImage(id) {
  return {
    type: types.SET_CURRENT_IMAGE,
    id
  }
}

function fetchImgAddr (galleryId) {
  return function (dispatch) {
    dispatch(setIsFetching(true))
    const addrToFetch = galleryId !== undefined ? config.adressServer+'/gallery/'+ galleryId : config.adressServer+`/pictures`
    return fetch(addrToFetch)
      .then(
        response => response.json(),
        error => console.log('An error occured.', error)
      )
      .then(json => {
        if(json !== undefined) utils.shuffle(json.pictures)
        dispatch(setGallery(json))
        dispatch(loadImages())
        dispatch(setIsFetching(false))
      })
  }
}

export {
  types,
  fetchImgAddr,
  loadImages,
  loadMore,
  razImgs,
  setCurrentImage,
  setLightboxIsOpen
}
