import config from 'config'
import Http from 'Http'

const types = {
  SET_MESSAGE: 'SET_MESSAGE',
  SAVE_ADRESS_SERVER: 'SAVE_ADRESS_SERVER',
  SET_GALLERIES: 'SET_GALLERIES',
  SET_CURRENT_PICTURES: 'SET_CURRENT_PICTURES'
}

const setMessage = message => {
  return {
    type: types.SET_MESSAGE,
    message
  }
}

const saveAdressServer = adress => {
  return {
    type: types.SAVE_ADRESS_SERVER,
    adress
  }
}

const setGalleries = galleries => {
  return {
    type: types.SET_GALLERIES,
    galleries
  }
}

const setCurrentPictures = pictures => {
  return {
    type: types.SET_CURRENT_PICTURES,
    pictures
  }
}

const getGalleries = () => {
  return function (dispatch) {
    return Http.get('/galleries')
      .then(response => response.json())
      .then(data => {
        dispatch(setGalleries(data.galleries))
      })
  }
}

const deletePicture = pictureId => {
  return function (dispatch) {
    return Http.delete(`/picture/${pictureId}`)
      .then(response => response.json())
      .then(data => dispatch(setCurrentPictures(data.pictures)))
  }
}

const addPicture = (galleryId, file) => {
  return function (dispatch) {
    const formData = new FormData()
    formData.append("file", file)
    formData.append("galleryId", galleryId)

    return Http.post(`/picture`, formData)
      .then(response => response.json())
      .then(data => dispatch(setCurrentPictures(data.pictures)))
  }
}

const getGalleryPictures = (gallery) =>
  function (dispatch) {
    return Http.get(`/gallery/${gallery.id}`)
      .then(response => response.json())
      .then(data => dispatch(setCurrentPictures(data.pictures)))

  }

const postGallery = (galleryId, body) => {
  return Http.put(`/gallery/${galleryId}`, body)
}

const updateDB = () => {
  return function (dispatch) {
    fetch(config.adressServer + '/updatedb')
      .then(
        response => response.json(),
        error => console.log('An error occured.', error)
      )
      .then(
        json => {
          dispatch(setMessage(json.update))
        }
      )
  }
}

export {
  types,
  updateDB,
  saveAdressServer,
  getGalleries,
  setCurrentPictures,
  deletePicture,
  addPicture,
  postGallery,
  getGalleryPictures
}
